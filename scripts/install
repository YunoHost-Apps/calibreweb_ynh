#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================


source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE
upload=$YNH_APP_ARG_UPLOAD
public_library=$YNH_APP_ARG_PUBLIC_LIBRARY

#Source common.sh required to be after var initialization as some variables are updated in it that are then used in the script
#when initializing the conf file of the app
source _common.sh

#if app is public, we assume library is public
if [ $is_public -eq 1 ]; then
	public_library=1
fi

if [ $is_public -eq 1 ]; then 						#app is public, library is public
	calibre_dir=$DOSSIER_MEDIA/share/eBook
elif [ $is_public -eq 0 ] && [ $public_library -eq 1 ]; then  #app is private, library is public
	calibre_dir=$DOSSIER_MEDIA/share/eBook
else 												#app is private, library is private
	calibre_dir=$DOSSIER_MEDIA/$admin/eBook
fi

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=5

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=5

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app admin $admin

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AN AVAILABLE PORT
#=================================================

# Find a free port
port=$(ynh_find_port 8083)
ynh_script_progression --message="Setting port $port..." --weight=5
ynh_app_setting_set $app port $port

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Downloading sources to $final_path..." --weight=10
ynh_app_setting_set $app final_path $final_path

#Set settings constant initializer of the app
ynh_add_config --template="../sources/patches/app-config_sql.py.patch.src" --destination="../sources/patches/app-config_sql.py.patch"
ynh_add_config --template="../sources/patches/app-ub.py.patch.src" --destination="../sources/patches/app-ub.py.patch"
ynh_add_config --template="../sources/patches/app-constants.py.patch.src" --destination="../sources/patches/app-constants.py.patch"

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_script_progression --message="Installing package dependencies..." --weight=80
ynh_install_app_dependencies $PKG_DEPENDENCIES

#use latest version of pip as per documentation in https://github.com/pypa/get-pip
#cannot use helper as maintaining the checksum would be a pain in the a***
ynh_exec_quiet curl https://bootstrap.pypa.io/get-pip.py | python3

ynh_script_progression --message="Installing pip requirements..." --weight=40
pip3 install --no-cache-dir --target $final_path/vendor -r $final_path/requirements.txt

ynh_script_progression --message="Installing pip additionnal requirements..." --weight=40
pip3 install --no-cache-dir --upgrade --target $final_path/vendor -r $final_path/optional-requirements.txt

#=================================================
# NGINX CONFIGURATION
#=================================================
#Cannot use empty string for X-script-name, causes an issue in the python prg
ynh_script_progression --message="Setting up system configuration..." --weight=5


if [ $path_url = "/" ] ; then
	ynh_replace_string "        proxy_set_header	X-Script-Name" "#        proxy_set_header	X-Script-Name" ../conf/nginx.conf
fi

if [ $is_public -eq 0 ]; then
	ynh_replace_string "#       proxy_set_header	X-Remote-User" "        proxy_set_header	X-Remote-User" ../conf/nginx.conf
fi

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

chown -R $app: $final_path
chmod 740 $final_path

#=================================================
# SETUP SYSTEMD
#=================================================

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# CREATE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Creating files and directory..." --weight=5
#Logic is as follow : if app is set to be publicly accessible, we will assume that the library should be set in "Share" multimedia directory
# If app is set to be private but access is requested for all user, we will assume the same
# If app is set to be private but access is limited to the admin user, we will set it inside his own multimedia directory.
# Access to the app is managed in the SSOwat part of the script.

#build multimedia directory
ynh_multimedia_build_main_dir
ynh_multimedia_addaccess $app


#Check if metadata.db file exists. If not create it (empty library)
if [ ! -e "$calibre_dir"/metadata.db ]; then
	cp -a ../conf/metadata.db.empty $calibre_dir/metadata.db
	chown $app:$app $calibre_dir/*
fi

ynh_app_setting_set $app calibre_dir $calibre_dir

#=================================================
# SETUP LOGROTATE
#=================================================

# Use logrotate to manage application logfile(s)
ynh_use_logrotate
chown -R $app:$app /var/log/$app


#=================================================
# SPECIFIC SETUP
#=================================================

#Update Imagick policy as per https://github.com/janeczku/calibre-web/wiki/FAQ#what-to-do-if-cover-pictures-are-not-extracted-from-pdf-files
ynh_replace_string --match_string="<policy domain="coder" rights="none" pattern="PDF" />" \
		--replace_string="<policy domain="coder" rights="read" pattern="PDF" />" \
		--target_file="/etc/ImageMagick-6/policy.xml"



#=================================================
# STORE THE CHECKSUM OF THE CONFIG FILE
#=================================================

# Calculate and store the config file checksum into the app settings
#ynh_store_file_checksum "${final_path}/app.db"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================

yunohost service add $app --description="Browse eBook in the web" --log="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	#ynh_app_setting_set $app unprotected_uris "/"
	ynh_permission_update --permission "main" --add visitors
fi
if [ $public_library -eq 0 ]; then
	ynh_permission_update --permission "main" --add $admin
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reload nginx and start $app..." --weight=5
ynh_systemd_action --service_name=nginx --action=reload
ynh_systemd_action --service_name=$app --action="start" --line_match="Starting Gevent server on" -t 30

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --last
