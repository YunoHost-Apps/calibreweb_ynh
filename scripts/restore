#!/bin/bash

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression "Restoring nginx configuration..."
ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression "Restoring the app main directory..."
ynh_restore "$install_dir"

#=================================================
# RESTORE THE KEPUBIFY BINARIES
#=================================================
ynh_script_progression "Restoring Kepubify..."
ynh_restore "/opt/kepubify/$app"

#=================================================
# RESTORE USER RIGHTS
#=================================================
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app: $install_dir
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 740 $install_dir
#Use venv to install pip requirements - Inspired from https://github.com/YunoHost-Apps/pyinventory_ynh/blob/master/scripts/install
ynh_script_progression "Reinstalling pip requirements..."
# Always recreate everything fresh with current python version
# When reinstalling on a new yunohost, this is required
if [ -d "${install_dir}/venv" ] ; then
	ynh_safe_rm "${install_dir}/venv"
fi

# Skip pip because of: https://github.com/YunoHost/issues/issues/1960
python3 -m venv --without-pip "${install_dir}/venv"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:" "$install_dir"
#run source in a 'sub shell'
(
	cd "$install_dir"
	set +o nounset
	source "venv/bin/activate"
	set -o nounset
	ynh_exec_as_app venv/bin/python3 -m ensurepip
	ynh_exec_as_app venv/bin/pip3 install --upgrade wheel pip setuptools
	ynh_exec_as_app venv/bin/pip3 install --no-cache-dir --upgrade -r "$install_dir/requirements.txt"
	ynh_exec_as_app venv/bin/pip3 install --no-cache-dir --upgrade -r "$install_dir/optional-requirements.txt"
)

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression "Restoring $app's systemd service..."

ynh_restore "/etc/systemd/system/$app.service"
systemctl enable $app.service --quiet

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================

yunohost service add $app --description="Browse eBook in the web" --log="$log_file"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore "/etc/logrotate.d/$app"

#=================================================
# RESTORE THE LOG FILE DIRECTORY
#=================================================
mkdir -p /var/log/$app
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app /var/log/$app

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================

ynh_script_progression "Restoring data directory if required..."
ynh_restore "$calibre_dir" || true

#=================================================
# RESTORE THE MULTIMEDIA DIR IF NOT EXISTING
#=================================================
ynh_script_progression "Restoring the multimedia directory..."
ynh_multimedia_build_main_dir
ynh_multimedia_addaccess $app

#=================================================
# INITIALIZE DATA IF NOT EXISTING
#=================================================

if [ ! -e "$calibre_dir" ]; then
	ynh_print_info "Create calibre library folder $calibre_dir"
	mkdir -p $calibre_dir
	chown -R $app:$app $calibre_dir
fi
#Check if metadata.db file exists. If not create it (empty library)
if [ ! -e "$calibre_dir"/metadata.db ]; then
	cp -a ../settings/conf/metadata.db.empty $calibre_dir/metadata.db
	chown $app:$app $calibre_dir/*
fi

#===================================================
# SPECIFIC SETUP
#===================================================
#Update Imagick policy as per https://github.com/janeczku/calibre-web/wiki/FAQ#what-to-do-if-cover-pictures-are-not-extracted-from-pdf-files
ynh_replace --match="<policy domain="coder" rights="none" pattern="PDF" />" \
		--replace="<policy domain="coder" rights="read" pattern="PDF" />" \
		--file="/etc/ImageMagick-6/policy.xml"

# Remove the option backup_core_only if it's in the settings.yml file
ynh_app_setting_delete $app backup_core_only

#=================================================
# RESTORE THE FAIL2BAN CONFIGURATION
#=================================================
ynh_script_progression "Restoring the Fail2Ban configuration..."

ynh_restore "/etc/fail2ban/jail.d/$app.conf"
ynh_restore "/etc/fail2ban/filter.d/$app.conf"

if [ ! -f "$log_file" ]; then
	touch "$log_file"
	chown $app: "$log_file"
fi

ynh_systemctl --action=restart --service=fail2ban

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression "Reloading nginx web server..."
ynh_systemctl --service=nginx --action=reload

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --wait_until="Starting Gevent server on" -t 30

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Restoration completed for $app"

#=================================================
# WARNING FOR READ ACCESS
#=================================================
ynh_print_warn "Please, give required access to $app user to the $calibre_dir folder."
